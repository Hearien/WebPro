<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd" default-lazy-init="true">

    <!-- 默认数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!--基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <property name="driverClassName" value="${spring.datasource.driverClassName}"/>

        <!--配置初始化大小、最小、最大-->
        <property name="initialSize" value="5"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="30"/>

        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="30000"/>

        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="testWhileIdle" value="true"/>

        <!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!--打开PSCache，并且指定每个连接上PSCache的大小-->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!--连接泄漏处理。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接（例如忘记关闭连接）-->
        <property name="removeAbandoned" value="true"/>
        <!--1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!--关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
        <property name="validationQuery" value="select * from dual"/>

        <!--配置监控统计拦截的filters, 监控统计："stat",防SQL注入："wall",组合使用： "stat,wall"-->
        <property name="filters" value="stat"/>
    </bean>

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactorySlave" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:config/mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hearien.demo.**.model.dao" />
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
                ORDER=BEFORE
            </value>
        </property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactorySlave"/>
    </bean>

</beans>